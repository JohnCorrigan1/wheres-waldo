import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { toast } from "react-hot-toast";
import React, { useState } from "react";
import GameHeader from "../components/GameHeader";
import LeaderBoardModal from "../components/LeaderBoardModal";

const N64: NextPage = () => {
  const [xCord, setXCord] = useState(0);
  const [yCord, setYCord] = useState(0);
  const [pageX, setPageX] = useState(0);
  const [pageY, setPageY] = useState(0);
  const [isOpen, setIsOpen] = useState(false);
  const [isDonkeyKong, setIsDonkeyKong] = useState(false);
  const [isFox, setIsFox] = useState(false);
  const [isFalcon, setIsFalcon] = useState(false);
  const [isDonkeyKongClicked, setIsDonkeyKongClicked] = useState(false);
  const [isFoxClicked, setIsFoxClicked] = useState(false);
  const [isFalconClicked, setIsFalconClicked] = useState(false);

  const selectionHandler = (e: any) => {
    setXCord(e.pageX);
    setYCord(e.pageY);
    if (!isOpen) {
      setPageX(
        Math.round(
          (e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth) * 100
        )
      );
      setPageY(
        Math.round(
          (e.nativeEvent.offsetY / e.nativeEvent.target.offsetHeight) * 100
        )
      );
    }
    if (pageY >= 48 && pageY <= 52 && pageX >= 73 && pageX <= 80) {
      setIsDonkeyKong(true);
    } else if (pageY >= 65 && pageY <= 68 && pageX >= 72 && pageX <= 81) {
      setIsFalcon(true);
    } else if (pageY >= 37 && pageY <=46 && pageX >= 4 && pageX <= 23) {
      setIsFox(true);
    }
    setIsOpen(!isOpen);
  };

  const mouseHandler = (e: any) => {
    setPageX(
      Math.round(
        (e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth) * 100
      )
    );
    setPageY(
      Math.round(
        (e.nativeEvent.offsetY / e.nativeEvent.target.offsetHeight) * 100
      )
    );
  };

  const donkeykongHandler = () => {
    if (!isDonkeyKongClicked && isDonkeyKong) {
      setIsDonkeyKongClicked(true);
      toast.success("You found Donkey Kong!");
    } else if (!isDonkeyKongClicked && !isDonkeyKong) {
      toast.error("That's not Donkey Kong");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    } else if (isDonkeyKongClicked) {
      toast.error("You already found Donkey Kong");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    }
  };

  const falconHandler = () => {
    if (!isFalconClicked && isFalcon) {
      setIsFalconClicked(true);
      toast.success("You found Falcon");
    } else if (!isFalconClicked && !isFalcon) {
      toast.error("That's not Falcon");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    } else if (isFalconClicked) {
      toast.error("You already found Falcon");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    }
  };

  const foxHandler = () => {
    if (!isFoxClicked && isFox) {
      setIsFoxClicked(true);
      toast.success("You found Fox");
    } else if (!isFoxClicked && !isFox) {
      toast.error("That's not Fox");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    } else if (isFoxClicked) {
      toast.error("You already found Fox");
      setIsDonkeyKong(false);
      setIsFox(false);
      setIsFalcon(false);
    }
  };

  return (
    <div
      onMouseMove={mouseHandler}
      onClick={selectionHandler}
      className="flex n64"
    >
      <Head>
        <title>Where is Everyone?</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <style jsx>{`.items-container{
    top: ${yCord - 20}px;
    left: ${xCord + 35}px;`}</style>

      <GameHeader
        isChar1={isFalconClicked}
        isChar2={isDonkeyKongClicked}
        isChar3={isFoxClicked}
        isOver={isDonkeyKongClicked && isFoxClicked && isFalconClicked}
        char1Image="/falcon.png"
        char2Image="/donkeyKong.png"
        char3Image="/fox.png"
      />

      {isDonkeyKongClicked && isFoxClicked && isFalconClicked && (
        <LeaderBoardModal
          isOver={isDonkeyKongClicked && isFoxClicked && isFalconClicked}
          level={"n64"}
        />
      )}

      {isOpen ? (
        <div className="font-body rounded-md bg-slate-600 text-2xl font-semibold absolute items-container cursor-pointer shadow-lg bg-opacity-80 text-zinc-200">
          {!isFalconClicked && (
            <h1
              className={
                (isFalconClicked ? "line-through" : "") +
                "border-black border-b-2 hover:bg-slate-400 p-2 rounded-t-md flex items-center"
              }
              onClick={falconHandler}
            >
              Falcon
              <Image src="/falcon.png" width={50} height={50} alt="logo" />
            </h1>
          )}
          {!isFoxClicked && (
            <h1
              className="border-black border-b-2 p-2 hover:bg-slate-400 flex gap-5 items-center"
              onClick={foxHandler}
            >
              Fox
              <Image
                src="/fox.png"
                width={50}
                height={50}
                alt="logo"
                className="mr-5"
              />
            </h1>
          )}
          {!isDonkeyKongClicked && (
            <h1
              className="p-2 rounded-b-md hover:bg-slate-400 flex gap-4"
              onClick={donkeykongHandler}
            >
              DK
              <Image src="/donkeyKong.png" width={50} height={50} alt="logo" />
            </h1>
          )}
        </div>
      ) : (
        <></>
      )}
    </div>
  );
};

export default N64;
